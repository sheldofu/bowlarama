{"version":3,"sources":["../../scripts/anim.js"],"names":["Anim","players","currentPlayer","currentRoll","bindUI","pins","document","querySelectorAll","ball","getElementById","ind","next","addEventListener","resetFrame","bind","turnLoop","classList","add","console","log","scoreReveal","rollBall","nextTurn","nextPlayer","playerEqualiser","Math","round","length","querySelector","innerHTML","score","i","remove","pinScore","pinsKnocked","pinCount"],"mappings":";;;;;;;;;;AAAA;IACqBA,I;AAEnB,gBAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,aAAL,GAAqB,CAArB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,MAAL;AACD;;;;6BAEQ;AACP,WAAKC,IAAL,GAAYC,SAASC,gBAAT,CAA0B,OAA1B,CAAZ;AACA,WAAKC,IAAL,GAAYF,SAASG,cAAT,CAAwB,MAAxB,CAAZ;AACA,UAAIC,MAAMJ,SAASG,cAAT,CAAwB,KAAxB,CAAV;AACA,UAAIE,OAAOL,SAASG,cAAT,CAAwB,WAAxB,CAAX;AACAC,UAAIE,gBAAJ,CAAqB,cAArB,EAAqC,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAArC;AACAH,WAAKC,gBAAL,CAAsB,OAAtB,EAA+B,KAAKG,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAA/B;AACD;;;+BAEU;AACT,WAAKN,IAAL,CAAUQ,SAAV,CAAoBC,GAApB,CAAwB,SAAxB;AACAC,cAAQC,GAAR,CAAY,KAAKX,IAAjB;AACD;;;+BAEU;AACT,WAAKY,WAAL;AACA,WAAKC,QAAL;AACA,WAAKC,QAAL;AACA,WAAKC,UAAL;AACD;;;kCAEa;AACZL,cAAQC,GAAR,CAAY,KAAKlB,OAAjB;AACA,UAAIuB,kBAAkBC,KAAKC,KAAL,CAAW,CAAC,KAAKvB,WAAL,GAAiB,CAAlB,IAAqB,KAAKF,OAAL,CAAa0B,MAA7C,CAAtB,CAFY,CAEgE;AAC5ErB,eAASsB,aAAT,CAAuB,YAAW,KAAK1B,aAAhB,GAA+B,gBAA/B,GAAiDsB,eAAjD,GAAkE,GAAzF,EAA8FK,SAA9F,GAA0G,KAAK5B,OAAL,CAAa,KAAKC,aAAlB,EAAiC4B,KAAjC,CAAuCN,kBAAgB,CAAvD,CAA1G;AACD;;;iCAEY;AACX,UAAI,KAAKtB,aAAL,GAAqB,CAArB,KAA2B,KAAKD,OAAL,CAAa0B,MAA5C,EAAoD;AAClD,aAAKzB,aAAL,GAAqB,CAArB;AACD,OAFD,MAEO;AACL,aAAKA,aAAL,GAAqB,KAAKA,aAAL,GAAqB,CAA1C;AACD;AACF;;;iCAEY;AACX,WAAK,IAAI6B,IAAI,CAAb,EAAgBA,IAAI,KAAK1B,IAAL,CAAUsB,MAA9B,EAAsCI,GAAtC,EAA2C;AACzC,aAAK1B,IAAL,CAAU0B,CAAV,EAAaf,SAAb,CAAuBgB,MAAvB,CAA8B,SAA9B;AACD;AACD,WAAKxB,IAAL,CAAUQ,SAAV,CAAoBgB,MAApB,CAA2B,SAA3B;AACD;;;+BAEU;AACT,UAAIC,WAAW,KAAKhC,OAAL,CAAa,KAAKC,aAAlB,EAAiC4B,KAAjC,CAAuCL,KAAKC,KAAL,CAAW,KAAKvB,WAAL,GAAiB,KAAKF,OAAL,CAAa0B,MAAzC,CAAvC,CAAf;AACA,WAAKxB,WAAL,GAAmB,KAAKA,WAAL,GAAmB,CAAtC;AACA,WAAK+B,WAAL,CAAiBD,QAAjB;AACA,UAAIA,aAAa,CAAjB,EAAoB;AAClB,aAAKpB,UAAL;AACD;AACF;;;gCAEWsB,Q,EAAU;AACpB,WAAK,IAAIJ,IAAI,CAAb,EAAgBA,IAAII,QAApB,EAA8BJ,GAA9B,EAAmC;AACjC,aAAK1B,IAAL,CAAU0B,CAAV,EAAaf,SAAb,CAAuBC,GAAvB,CAA2B,SAA3B;AACD;AACF;;;;;;kBAhEkBjB,I","file":"anim.js","sourcesContent":["// anim.js\r\nexport default class Anim {\r\n\r\n  constructor(players) {\r\n    this.players = players;\r\n    this.currentPlayer = 0;\r\n    this.currentRoll = 0;\r\n    this.bindUI();\r\n  }\r\n\r\n  bindUI() {\r\n    this.pins = document.querySelectorAll(\".pins\");\r\n    this.ball = document.getElementById('ball');\r\n    var ind = document.getElementById('ind');\r\n    var next = document.getElementById('nextRound');\r\n    ind.addEventListener(\"animationend\", this.resetFrame.bind(this));\r\n    next.addEventListener(\"click\", this.turnLoop.bind(this));\r\n  }\r\n\r\n  rollBall() {\r\n    this.ball.classList.add(\"bowling\");\r\n    console.log(this.ball);\r\n  }\r\n\r\n  turnLoop() {\r\n    this.scoreReveal();\r\n    this.rollBall();\r\n    this.nextTurn();\r\n    this.nextPlayer();\r\n  }\r\n\r\n  scoreReveal() {\r\n    console.log(this.players);\r\n    var playerEqualiser = Math.round((this.currentRoll+1)/this.players.length); //change to number of players\r\n    document.querySelector('.player' +this.currentPlayer+ ' td:nth-child('+(playerEqualiser)+')').innerHTML = this.players[this.currentPlayer].score[playerEqualiser-1]\r\n  }\r\n\r\n  nextPlayer() {\r\n    if (this.currentPlayer + 1 === this.players.length) {\r\n      this.currentPlayer = 0;\r\n    } else {\r\n      this.currentPlayer = this.currentPlayer + 1;\r\n    }\r\n  }\r\n\r\n  resetFrame() {\r\n    for (var i = 0; i < this.pins.length; i++) {\r\n      this.pins[i].classList.remove(\"knocked\");\r\n    }\r\n    this.ball.classList.remove(\"bowling\"); \r\n  }\r\n\r\n  nextTurn() {\r\n    var pinScore = this.players[this.currentPlayer].score[Math.round(this.currentRoll/this.players.length)];\r\n    this.currentRoll = this.currentRoll + 1;\r\n    this.pinsKnocked(pinScore);\r\n    if (pinScore === 0) {\r\n      this.resetFrame();\r\n    } \r\n  }\r\n\r\n  pinsKnocked(pinCount) {\r\n    for (var i = 0; i < pinCount; i++) {\r\n      this.pins[i].classList.add(\"knocked\");\r\n    } \r\n  }\r\n}\r\n"]}